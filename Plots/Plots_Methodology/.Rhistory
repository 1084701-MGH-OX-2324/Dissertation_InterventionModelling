df %>%
group_by(age_category) %>%
mutate(proportion = pop / total_population)
}
sa_pop <- calculate_proportions(sa_pop)
uk_pop <- calculate_proportions(uk_pop)
bo_pop <- calculate_proportions(bo_pop)
sa_pop_plot <- ggplot(sa_pop, aes(x = ages, y = proportion)) +
geom_bar(stat = "identity", fill = "lightblue") +
labs(y = "Population", title = "South Africa") +
theme_minimal() +
theme(axis.text.y = element_blank(),
axis.title.y = element_blank(),
axis.title.x = element_blank()) +
coord_flip()
uk_pop_plot <- ggplot(uk_pop, aes(x = ages, y = proportion)) +
geom_bar(stat = "identity", fill = "lightblue") +
labs(x = "Age Floor", y = "Population", title = "United Kingdom") +
theme_minimal() +
theme(axis.title.x = element_blank()) +
coord_flip()
bo_pop_plot <- ggplot(bo_pop, aes(x = ages, y = proportion)) +
geom_bar(stat = "identity", fill = "lightblue") +
labs(y = "Population", title = "Bolivia") +
theme_minimal() +
theme(axis.text.y = element_blank(),
axis.title.y = element_blank(),
axis.title.x = element_blank()) +
coord_flip()
grid.arrange(uk_pop_plot, bo_pop_plot, sa_pop_plot, ncol = 3)
combined_plot <- plot_grid(uk_pop_plot, bo_pop_plot, sa_pop_plot,
nrow = 1,
align = "v",
axis = "lr")
demo <- ggdraw() +
draw_plot(combined_plot, 0.05, 0.05, 0.95, 0.95) +
draw_label("Proportion of the Population [%]",
x = 0.0, y = 0.0, angle = 0, vjust = -0.5, hjust = -1.9, size = 12)
main_plot <- grid.arrange(demo, mat, nrow=2)
ggsave(filename = "Demog.png", plot = main_plot, width = 35, height = 30, units = "cm", dpi = 600)
# Load necessary libraries
library(ggplot2)
library(reshape2)
library(readxl)
library(dplyr)
library(patchwork)
library(ggalluvial)
library(tidyr)
library(dplyr)
library(readr)
library(grid)
library(gridExtra)
library(cowplot)
setwd("C:/Users/mschu/OneDrive - Nexus365/Placement/ModelScratch/ALL/PostPlots/Plots_Methodology")
contacts <- load("contacts.Rda")
#country <- "United Kingdom of Great Britain"
contact_home$`United Kingdom of Great Britain`
matrix_plot <- function(country){
# Extract data for country
contacts_uk <-  contact_school[[country]] + contact_work[[country]] + contact_other[[country]] + contact_home[[country]]
# Ensure matrix form
contacts_uk <- as.matrix(contacts_uk)
print(contacts_uk)
# Create age group labels (adjust according to your data)
age_groups <- seq(0, 75, by = 5) # Example: 0-4, 5-9, ..., 75-79
# Convert data for plotting
contacts_uk_long <- melt(contacts_uk)
colnames(contacts_uk_long) <- c("Age_Individual", "Age_HH_Contact", "Contact_Count")
# Convert age group indices to actual age group labels
contacts_uk_long$Age_Individual <- factor(contacts_uk_long$Age_Individual, labels = age_groups)
contacts_uk_long$Age_HH_Contact <- factor(contacts_uk_long$Age_HH_Contact, labels = age_groups)
# Plotting the heatmap
ggplot(contacts_uk_long, aes(x = Age_Individual, y = Age_HH_Contact, fill = Contact_Count)) +
geom_tile() +
scale_fill_gradientn(colors = c("white", "lightblue", "darkblue"), limits = c(0, 15)) +
labs(y = "Age of Contact", fill = "Contact Count") +
theme_minimal() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
legend.position = "top",
panel.grid.major = element_line(color = "black", size = 0.5),
panel.grid.minor = element_blank())
#ggtitle(paste0(country))
}
plot_sa <- matrix_plot("South Africa")
plot_bo <- matrix_plot("Bolivia (Plurinational State of")
plot_uk <- matrix_plot("United Kingdom of Great Britain")
combined_plot_mat <- plot_grid(plot_uk, plot_bo, plot_sa,
nrow = 1,
align = "v",
axis = "lr")
mat <- ggdraw() +
draw_plot(combined_plot_mat, 0.1, 0.1, 0.9, 0.9) +
draw_label("Age of the Individual (Age Floor)",
x = 0.5, y = -0.05, vjust = -1, size = 16) +
draw_label("Age of the Contact (Age Floor)",
x = -0.05, y = 0.5, angle = 90, vjust = 1, size = 16)
matrix <- grid.arrange(plot_uk, plot_bo, plot_sa, ncol = 3)
###########DEMOG PLOT
load("demog.Rda")
# Population data
sa_pop <- population %>%
filter(population$country == "South Africa")
uk_pop <- population %>%
filter(population$country == "United Kingdom")
bo_pop <- population %>%
filter(population$country == "Bolivia (Plurinational State of)")
calculate_proportions <- function(df) {
age_groups <- seq(0,100, by=5)
total_population <- sum(df$pop)
df$ages <- seq(0,100, by=5)
df %>%
group_by(age_category) %>%
mutate(proportion = pop / total_population)
}
sa_pop <- calculate_proportions(sa_pop)
uk_pop <- calculate_proportions(uk_pop)
bo_pop <- calculate_proportions(bo_pop)
sa_pop_plot <- ggplot(sa_pop, aes(x = ages, y = proportion)) +
geom_bar(stat = "identity", fill = "lightblue") +
labs(y = "Population", title = "South Africa") +
theme_minimal() +
theme(axis.text.y = element_blank(),
axis.title.y = element_blank(),
axis.title.x = element_blank()) +
coord_flip()
uk_pop_plot <- ggplot(uk_pop, aes(x = ages, y = proportion)) +
geom_bar(stat = "identity", fill = "lightblue") +
labs(x = "Age Floor", y = "Population", title = "United Kingdom") +
theme_minimal() +
theme(axis.title.x = element_blank()) +
coord_flip()
bo_pop_plot <- ggplot(bo_pop, aes(x = ages, y = proportion)) +
geom_bar(stat = "identity", fill = "lightblue") +
labs(y = "Population", title = "Bolivia") +
theme_minimal() +
theme(axis.text.y = element_blank(),
axis.title.y = element_blank(),
axis.title.x = element_blank()) +
coord_flip()
grid.arrange(uk_pop_plot, bo_pop_plot, sa_pop_plot, ncol = 3)
combined_plot <- plot_grid(uk_pop_plot, bo_pop_plot, sa_pop_plot,
nrow = 1,
align = "v",
axis = "lr")
demo <- ggdraw() +
draw_plot(combined_plot, 0.05, 0.05, 0.95, 0.95) +
draw_label("Proportion of the Population [%]",
x = 0.0, y = 0.0, angle = 0, vjust = -0.5, hjust = -1.9, size = 12)
main_plot <- grid.arrange(demo, mat, nrow=2)
ggsave(filename = "Demog.png", plot = main_plot, width = 35, height = 30, units = "cm", dpi = 600)
# Load necessary libraries
library(ggplot2)
library(reshape2)
library(readxl)
library(dplyr)
library(patchwork)
library(ggalluvial)
library(tidyr)
library(dplyr)
library(readr)
library(grid)
library(gridExtra)
library(cowplot)
setwd("C:/Users/mschu/OneDrive - Nexus365/Placement/ModelScratch/ALL/PostPlots/Plots_Methodology")
contacts <- load("contacts.Rda")
#country <- "United Kingdom of Great Britain"
contact_home$`United Kingdom of Great Britain`
matrix_plot <- function(country){
# Extract data for country
contacts_uk <-  contact_school[[country]] + contact_work[[country]] + contact_other[[country]] + contact_home[[country]]
# Ensure matrix form
contacts_uk <- as.matrix(contacts_uk)
print(contacts_uk)
# Create age group labels (adjust according to your data)
age_groups <- seq(0, 75, by = 5) # Example: 0-4, 5-9, ..., 75-79
# Convert data for plotting
contacts_uk_long <- melt(contacts_uk)
colnames(contacts_uk_long) <- c("Age_Individual", "Age_HH_Contact", "Contact_Count")
# Convert age group indices to actual age group labels
contacts_uk_long$Age_Individual <- factor(contacts_uk_long$Age_Individual, labels = age_groups)
contacts_uk_long$Age_HH_Contact <- factor(contacts_uk_long$Age_HH_Contact, labels = age_groups)
# Plotting the heatmap
ggplot(contacts_uk_long, aes(x = Age_Individual, y = Age_HH_Contact, fill = Contact_Count)) +
geom_tile() +
scale_fill_gradientn(colors = c("white", "lightblue", "darkblue"), limits = c(0, 15)) +
labs(y = "Age of Contact", fill = "Contact Count") +
theme_minimal() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
legend.position = "top",
panel.grid.major = element_line(color = "black", size = 0.5),
panel.grid.minor = element_blank())
#ggtitle(paste0(country))
}
plot_sa <- matrix_plot("South Africa")
plot_bo <- matrix_plot("Bolivia (Plurinational State of")
plot_uk <- matrix_plot("United Kingdom of Great Britain")
combined_plot_mat <- plot_grid(plot_uk, plot_bo, plot_sa,
nrow = 1,
align = "v",
axis = "lr")
mat <- ggdraw() +
draw_plot(combined_plot_mat, 0.1, 0.1, 0.9, 0.9) +
draw_label("Age of the Individual (Age Floor)",
x = 0.5, y = -0.05, vjust = -1, size = 16) +
draw_label("Age of the Contact (Age Floor)",
x = -0.05, y = 0.5, angle = 90, vjust = 1, size = 16)
matrix <- grid.arrange(plot_uk, plot_bo, plot_sa, ncol = 3)
###########DEMOG PLOT
load("demog.Rda")
# Population data
sa_pop <- population %>%
filter(population$country == "South Africa")
uk_pop <- population %>%
filter(population$country == "United Kingdom")
bo_pop <- population %>%
filter(population$country == "Bolivia (Plurinational State of)")
calculate_proportions <- function(df) {
age_groups <- seq(0,100, by=5)
total_population <- sum(df$pop)
df$ages <- seq(0,100, by=5)
df %>%
group_by(age_category) %>%
mutate(proportion = pop / total_population)
}
sa_pop <- calculate_proportions(sa_pop)
uk_pop <- calculate_proportions(uk_pop)
bo_pop <- calculate_proportions(bo_pop)
sa_pop_plot <- ggplot(sa_pop, aes(x = ages, y = proportion)) +
geom_bar(stat = "identity", fill = "lightblue") +
labs(y = "Population", title = "South Africa") +
theme_minimal() +
theme(axis.text.y = element_blank(),
axis.title.y = element_blank(),
axis.title.x = element_blank()) +
coord_flip()
uk_pop_plot <- ggplot(uk_pop, aes(x = ages, y = proportion)) +
geom_bar(stat = "identity", fill = "lightblue") +
labs(x = "Age Floor", y = "Population", title = "United Kingdom") +
theme_minimal() +
theme(axis.title.x = element_blank()) +
coord_flip()
bo_pop_plot <- ggplot(bo_pop, aes(x = ages, y = proportion)) +
geom_bar(stat = "identity", fill = "lightblue") +
labs(y = "Population", title = "Bolivia") +
theme_minimal() +
theme(axis.text.y = element_blank(),
axis.title.y = element_blank(),
axis.title.x = element_blank()) +
coord_flip()
grid.arrange(uk_pop_plot, bo_pop_plot, sa_pop_plot, ncol = 3)
combined_plot <- plot_grid(uk_pop_plot, bo_pop_plot, sa_pop_plot,
nrow = 1,
align = "v",
axis = "lr")
demo <- ggdraw() +
draw_plot(combined_plot, 0.05, 0.05, 0.95, 0.95) +
draw_label("Proportion of the Population [%]",
x = 0.0, y = 0.0, angle = 0, vjust = -0.5, hjust = -1.9, size = 12)
main_plot <- grid.arrange(demo, mat, nrow=2)
ggsave(filename = "Demog.png", plot = main_plot, width = 35, height = 30, units = "cm", dpi = 600)
###########Libraries
library(deSolve)
library(readxl)
library(viridis)
library(dplyr)
library(openxlsx)
library(stringr)
library(ggplot2)
library(reshape2)
library(grid)
library(gridExtra)
# Set working directory
setwd("C:/Users/mschu/OneDrive - Nexus365/Placement/ModelScratch/ALL/PostPlots/Plots_Methodology")
file_name <- ("ModelRuns.xlsx")
current_diseases <- c("Influenza", "SARS-CoV-2")
age_groups <- read_excel(file_name, sheet= "Influenza")$agefloor
plot_data <- data.frame()
for (i in 1:length(current_diseases)) {
ratios <- read_excel(file_name, sheet=current_diseases[i])
ihr <- ratios$ihr
hfr <- ratios$hfr
cfr <- ratios$cfr
disease_data <- data.frame(
AgeGroup = age_groups,
IHR = ihr,
HFR = hfr,
CFR = cfr,
Disease = current_diseases[i]
)
plot_data <- rbind(plot_data, disease_data)
}
plot_data_melt <- melt(plot_data, id.vars = c("AgeGroup", "Disease"),
variable.name = "Metric", value.name = "Rate")
plot_data_influenza <- subset(plot_data_melt, Disease == "Influenza")
plot_data_covid <- subset(plot_data_melt, Disease == "SARS-CoV-2")
plot_influenza <- ggplot(plot_data_influenza, aes(x = AgeGroup, y = Rate)) +
geom_line(size = 1.2, color = "grey") +
facet_wrap(~ Metric, scales = "free_y", nrow = 1) +
labs(title = "Influenza-like Disease", x = NULL, y = "Ratio in %")  +
theme_minimal(base_size = 10)  +
theme(
plot.title = element_text(face = "bold", size = 12),
axis.text = element_text(size = 12),
axis.title = element_text(size = 12),
strip.text = element_text(size = 12)
)
plot_covid <- ggplot(plot_data_covid, aes(x = AgeGroup, y = Rate)) +
geom_line(size = 1.2, color = "black") +
facet_wrap(~ Metric, scales = "free_y", nrow = 1) +
labs(title = "SARS-CoV-2-like Disease",
x = "Age Group", y = "Ratio in %") +
theme_minimal(base_size = 10)+
theme(
plot.title = element_text(face = "bold", size = 12),
axis.text = element_text(size = 12),
axis.title = element_text(size = 12),
strip.text = element_text(size = 12)
)
ratios <- grid.arrange(plot_influenza, plot_covid, nrow = 2)
ggsave("Ratios.png", plot= ratios, width = 25, height = 18, units = "cm", dpi = 600)
##scaled ratios
demog_data <- read_excel(file_name, sheet="population", col_types = c("text"))
demog_data_UK <- filter(demog_data, country == "United Kingdom")
demog_data_BO <- filter(demog_data, country == "Bolivia (Plurinational State of)")
demog_data_SA <- filter(demog_data, country == "South Africa")
popstruc_UK <- as.numeric(demog_data_UK$population)
popstruc_UK_ratios <- (popstruc_UK / sum(popstruc_UK))
popstruc_BO <- as.numeric(demog_data_BO$population)
popstruc_BO_ratios <- (popstruc_BO / sum(popstruc_BO))
popstruc_SA <- as.numeric(demog_data_SA$population)
popstruc_SA_ratios <- (popstruc_SA / sum(popstruc_SA))
ihr_cov <- (filter(plot_data_covid, Metric == "IHR"))$Rate
ihr_flu <- (filter(plot_data_influenza, Metric == "IHR"))$Rate
scaled_ratio_cov_UK <- popstruc_UK_ratios * ihr_cov
scaled_ratio_cov_BO <- popstruc_BO_ratios * ihr_cov
scaled_ratio_cov_SA <- popstruc_SA_ratios * ihr_cov
#covid
df_cov_UK <- data.frame(
AgeCategory = disease_data$AgeGroup,  # Updated column name
ScaledRatio = popstruc_UK_ratios * ihr_cov,
Disease = "COVID",
Country = "United Kingdom"
)
df_cov_BO <- data.frame(
AgeCategory = disease_data$AgeGroup,  # Updated column name
ScaledRatio = popstruc_BO_ratios * ihr_cov,
Disease = "COVID",
Country = "Bolivia (Plurinational State of)"
)
df_cov_SA <- data.frame(
AgeCategory = disease_data$AgeGroup,  # Updated column name
ScaledRatio = popstruc_SA_ratios * ihr_cov,
Disease = "COVID",
Country = "South Africa"
)
# Influenza
df_flu_UK <- data.frame(
AgeCategory = disease_data$AgeGroup,  # Updated column name
ScaledRatio = popstruc_UK_ratios * ihr_flu,
Disease = "Influenza",
Country = "United Kingdom"
)
df_flu_BO <- data.frame(
AgeCategory = disease_data$AgeGroup,  # Updated column name
ScaledRatio = popstruc_BO_ratios * ihr_flu,
Disease = "Influenza",
Country = "Bolivia (Plurinational State of)"
)
df_flu_SA <- data.frame(
AgeCategory = disease_data$AgeGroup,  # Updated column name
ScaledRatio = popstruc_SA_ratios * ihr_flu,
Disease = "Influenza",
Country = "South Africa"
)
all_data <- rbind(df_cov_UK, df_cov_BO, df_cov_SA, df_flu_UK, df_flu_BO, df_flu_SA)
all_data$Country[all_data$Country == "Bolivia (Plurinational State of)"] <- "Bolivia"
all_data$Disease[all_data$Disease == "Influenza"] <- "Influenza-like"
all_data$Disease[all_data$Disease == "COVID"] <- "SARS-CoV-2-like"
options(scipen = 999)
scaled_ratios <- ggplot(all_data, aes(x = AgeCategory, y = ScaledRatio, color = Disease, group = Disease)) +
geom_line(size = 1) +  # Create line plots with thicker lines
geom_point(size = 2) +  # Add points with larger size for clarity
facet_grid(Disease ~ Country, scales = "free_y") +  # Facet labels on top and right
labs(
x = "Age Category",
y = "Infection Hospitalization Ratio in % Scaled to Total Population"
) +
theme_classic() +  # Use a classic theme
scale_color_brewer(palette = "Set1") +  # Use a professional color palette
theme(
legend.position = "none",
axis.text.x = element_text(angle = 45, hjust = 1),
strip.text = element_text(face = "bold", size = 12),  # Bold facet labels
axis.title = element_text(size = 14),  # Increase axis title size
axis.text = element_text(size = 12),  # Increase axis text size
panel.grid.major = element_line(color = "gray90"),  # Add major grid lines
panel.grid.minor = element_blank(),  # Hide minor grid lines
panel.spacing = unit(1.5, "lines"),  # Increase spacing between facets
strip.placement = "outside",  # Place facet strip labels outside the plot
strip.background = element_blank(),  # Remove background for strip labels for a cleaner look
strip.switch.pad.grid = unit(0.1, "cm")  # Adjust spacing between strip and panel
)
#panel for target groups
risk_group_influenza <- c(0, 5, 10, 65, 70, 75, 80, 85, 90, 95, 100)  # 0-10 and 65+
risk_group_covid <- c(60,65, 70, 75, 80, 85, 90, 95, 100)  # 65+
calculate_risk_group_proportion <- function(population_ratios, age_groups, risk_group) {
risk_population <- sum(population_ratios[age_groups %in% risk_group])
return(risk_population)
}
proportion_risk_influenza_UK <- calculate_risk_group_proportion(popstruc_UK_ratios, age_groups, risk_group_influenza)
proportion_risk_influenza_BO <- calculate_risk_group_proportion(popstruc_BO_ratios, age_groups, risk_group_influenza)
proportion_risk_influenza_SA <- calculate_risk_group_proportion(popstruc_SA_ratios, age_groups, risk_group_influenza)
proportion_risk_covid_UK <- calculate_risk_group_proportion(popstruc_UK_ratios, age_groups, risk_group_covid)
proportion_risk_covid_BO <- calculate_risk_group_proportion(popstruc_BO_ratios, age_groups, risk_group_covid)
proportion_risk_covid_SA <- calculate_risk_group_proportion(popstruc_SA_ratios, age_groups, risk_group_covid)
cat("Proportion of Population in Risk Group:\n")
cat("Influenza - UK:", proportion_risk_influenza_UK, "\n")
cat("Influenza - Bolivia:", proportion_risk_influenza_BO, "\n")
cat("Influenza - South Africa:", proportion_risk_influenza_SA, "\n")
cat("COVID - UK:", proportion_risk_covid_UK, "\n")
cat("COVID - Bolivia:", proportion_risk_covid_BO, "\n")
cat("COVID - South Africa:", proportion_risk_covid_SA, "\n")
annotation_data <- data.frame(
Country = c("United Kingdom", "Bolivia", "South Africa", "United Kingdom", "Bolivia", "South Africa"),
Disease = c("Influenza-like", "Influenza-like", "Influenza-like", "SARS-CoV-2-like", "SARS-CoV-2-like", "SARS-CoV-2-like"),
Annotation = c(
paste0(round(proportion_risk_influenza_UK * 100, 2), "%"),
paste0(round(proportion_risk_influenza_BO * 100, 2), "%"),
paste0(round(proportion_risk_influenza_SA * 100, 2), "%"),
paste0(round(proportion_risk_covid_UK * 100, 2), "%"),
paste0(round(proportion_risk_covid_BO * 100, 2), "%"),
paste0(round(proportion_risk_covid_SA * 100, 2), "%")
)
)
scaled_ratios_panel <- ggplot(all_data, aes(x = AgeCategory, y = ScaledRatio, color = Disease, group = Disease)) +
geom_line(size = 1) +
geom_point(size = 2) +
facet_wrap(Disease ~ Country, scales = "free_y") +
labs(
x = "Age Category",
y = "Scaled Infection Hospitalization Ratio (% of Total Population)"
) +
theme_classic() +
scale_color_brewer(palette = "Set1") +
theme(
legend.position = "none",
axis.text.x = element_text(angle = 45, hjust = 1),
strip.text = element_text(face = "bold", size = 12),
axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
panel.grid.major = element_line(color = "gray90"),
panel.grid.minor = element_blank(),
panel.spacing = unit(1.5, "lines"),
strip.placement = "outside",
strip.background = element_blank(),
strip.switch.pad.grid = unit(0.1, "cm")
) +
geom_label(data = annotation_data, aes(x = 90, y = Inf, label = Annotation),
vjust = 1.5, hjust = 0.5, size = 4, fill = "white", color = "black", inherit.aes = FALSE)
ggsave("ScaledRatios.png", plot = scaled_ratios_panel, width = 25, height = 20, units = "cm", dpi = 600)
scaled_ratios_panel
###########Libraries
library(deSolve)
library(readxl)
library(viridis)
library(dplyr)
library(openxlsx)
library(stringr)
library(ggplot2)
library(reshape2)
library(grid)
library(gridExtra)
### Plot for explaining the calculation of the integral of effective contact reduction
# Set working directory
setwd("C:/Users/mschu/OneDrive - Nexus365/Placement/ModelScratch/ALL/PostPlots/Plots_Methodology")
#save file
png("interventions_plot.png", width = 10, height = 6, units = "in", res = 300)
# time vector from 0 to 365 days
days <- 0:365
#shielding activation
shielding <- ifelse(days >= 50 & days <= 220, 0.3, 0)
#lockdown activation
lockdown <- ifelse((days >= 80 & days <= 170) | (days >= 300 & days <= 365), 0.7, 0)
# Plot
plot(days, shielding, type="l", col= "#fc8660", ylim=c(0, 1),
xlab="Time (days)", ylab="Effective Contact Reduction in Total Population [%] ",
lwd=2, xlim=c(0, 365))
lines(days, lockdown, col= "#85b5d7", lwd=2)
# Limit the shading under the shielding curve to end at day 220
polygon(c(days[days <= 220], rev(days[days <= 220])),
c(shielding[days <= 220], rep(0, sum(days <= 220))),
col= "#fc8660", density=20, angle=45)
# Fill the area under the lockdown curve with diagonal lines
polygon(c(days, rev(days)), c(lockdown, rep(0, length(days))), col= "#85b5d7", density=20, angle=135)
# mark start and end dates
arrows(50, 0.4, 50, 0.1, length=0.1, col= "#fc8660", lwd=2)
text(50, 0.45, "Start", col= "#fc8660", pos=3)
arrows(220, 0.4, 220, 0.1, length=0.1, col= "#fc8660", lwd=2)
text(220, 0.45, "End", col= "#fc8660", pos=3)
arrows(80, 0.8, 80, 0.5, length=0.1, col= "#85b5d7", lwd=2)
text(80, 0.85, "Start 1", col= "#85b5d7", pos=3)
arrows(170, 0.8, 170, 0.5, length=0.1, col= "#85b5d7", lwd=2)
text(170, 0.85, "End 1", col= "#85b5d7", pos=3)
arrows(300, 0.8, 300, 0.5, length=0.1, col= "#85b5d7", lwd=2)
text(300, 0.85, "Start 2", col= "#85b5d7", pos=3)
# show how lockdown is calculated if longer than 365 days
arrows(365, 0.8, 365, 0.5, length=0.1, col= "#85b5d7", lwd=2)
text(365, 0.85, "End 2", col= "#85b5d7", pos=3)
legend("topleft", legend=c("Shielding", "Lockdown"), col=c( "#fc8660",  "#85b5d7"), lwd=2)
dev.off()
